// Generated by jextract

package libim;

import java.lang.foreign.MemorySegment;
import java.lang.foreign.SegmentScope;
/**
 * {@snippet :
 * void (*idevice_event_cb_t)(struct * event,void* user_data);
 * }
 */
public interface idevice_event_cb_t {

    void apply(java.lang.foreign.MemorySegment event, java.lang.foreign.MemorySegment user_data);
    static MemorySegment allocate(idevice_event_cb_t fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$32.idevice_event_cb_t_UP$MH, fi, constants$32.idevice_event_cb_t$FUNC, scope);
    }
    static idevice_event_cb_t ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _event, java.lang.foreign.MemorySegment _user_data) -> {
            try {
                constants$33.idevice_event_cb_t_DOWN$MH.invokeExact(symbol, _event, _user_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


