// Generated by jextract

package libim;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$6 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$6() {}
    static final FunctionDescriptor open_memstream$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle open_memstream$MH = RuntimeHelper.downcallHandle(
        "open_memstream",
        constants$6.open_memstream$FUNC
    );
    static final FunctionDescriptor setbuf$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle setbuf$MH = RuntimeHelper.downcallHandle(
        "setbuf",
        constants$6.setbuf$FUNC
    );
    static final FunctionDescriptor setvbuf$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle setvbuf$MH = RuntimeHelper.downcallHandle(
        "setvbuf",
        constants$6.setvbuf$FUNC
    );
    static final FunctionDescriptor setbuffer$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle setbuffer$MH = RuntimeHelper.downcallHandle(
        "setbuffer",
        constants$6.setbuffer$FUNC
    );
    static final FunctionDescriptor setlinebuf$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle setlinebuf$MH = RuntimeHelper.downcallHandle(
        "setlinebuf",
        constants$6.setlinebuf$FUNC
    );
    static final FunctionDescriptor fprintf$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle fprintf$MH = RuntimeHelper.downcallHandleVariadic(
        "fprintf",
        constants$6.fprintf$FUNC
    );
}


